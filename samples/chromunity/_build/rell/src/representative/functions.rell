import user;
import election;

function is_username_representative(name): boolean {
	val user = user.user@?{ .name == name};
	
	if (user == null) {
		return false;
	}
	
	val prev_election = election.get_latest_completed_election_id();
	
	if (prev_election == null) {
		return false;
	}
	
	return representative@?{ .user == user, .representative_election.id == prev_election } != null;
}

function is_user_suspended(rep: user.user, suspendee: user.user, timestamp): boolean {
	return user.user_suspension@?{ 
		.user == suspendee, 
		.suspended_by == rep,
		.suspended_until >= timestamp
	} != null;
} 